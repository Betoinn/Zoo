// SCRIPT POUR INDEX

<!-- Script pour gérer la pause de la vidéo, le menu et le bouton utilisateur -->
<script>
    // Obtenir la référence de la vidéo
    const video = document.getElementById('bg-video');

    // Fonction pour mettre en pause ou reprendre la vidéo
    function togglePause() {
        if (video.paused) {
            video.play();
        } else {
            video.pause();
        }
    }

    // Fonction pour ouvrir ou fermer le menu
    function toggleMenu() {
        const menu = document.getElementById('menu');
        menu.classList.toggle('open');
    }

    // Fonction pour ouvrir ou fermer le menu de connexion
    function toggleLoginMenu() {
        const loginMenu = document.getElementById('login-menu');
        loginMenu.classList.toggle('open');
    }

    // Fonction pour gérer la connexion
    function login() {
        const username = document.querySelector('#login-menu input[type="text"]').value;
        const password = document.querySelector('#login-menu input[type="password"]').value;

        // Vérifier si les champs sont remplis
        if (username && password) {
            // Ajouter ici la logique pour la connexion
            alert(`Connexion en tant que ${username}`);
        } else {
            alert('Veuillez remplir tous les champs.');
        }
    }

    // Fonction pour gérer l'inscription
    function register() {
        alert("Fonction d'inscription non implémentée.");
    }
	
</script>


// SCRIPT POUR LES PISTES
    <script>
        // Fonction pour ouvrir ou fermer le menu
        function toggleMenu() {
            const menu = document.getElementById('menu');
            menu.classList.toggle('open');
        }

        // Fonction pour ouvrir ou fermer le menu de connexion
        function toggleLoginMenu() {
            const loginMenu = document.getElementById('login-menu');
            loginMenu.classList.toggle('open');
        }

        // Fonction pour gérer la connexion
        function login() {
            const username = document.querySelector('#login-menu input[type="text"]').value;
            const password = document.querySelector('#login-menu input[type="password"]').value;

            // Vérifier si les champs sont remplis
            if (username && password) {
                // Ajouter ici la logique pour la connexion
                alert(`Connexion en tant que ${username}`);
            } else {
                alert('Veuillez remplir tous les champs.');
            }
        }

        // Fonction pour gérer l'inscription
        function register() {
            alert("Fonction d'inscription non implémentée.");
        }

        // Fonction pour changer l'état d'une piste
        function changeStatus(button) {
            button.classList.toggle("status-open");
            button.classList.toggle("status-closed");
            var statusText = button.nextElementSibling;
            if (button.classList.contains("status-open")) {
                statusText.textContent = "Ouvert";
            } else {
                statusText.textContent = "Fermé";
            }
        }

        // Événement pour ajouter un commentaire
        document.querySelectorAll('.comment-form').forEach(form => {
            form.addEventListener('submit', function (event) {
                event.preventDefault(); // Pour éviter le rechargement de la page
                var input = this.querySelector('input[type="text"]');
                var commentList = this.parentElement.querySelector('.comment-list');
                var commentItem = document.createElement('li');
                commentItem.textContent = input.value;
                commentList.appendChild(commentItem);
                input.value = ''; // Efface le champ de saisie après avoir ajouté le commentaire
            });
        });
    </script>






//SCRIPT POUR LES REMONTEES
// Fonction pour ouvrir ou fermer le menu
function toggleMenu() {
    const menu = document.getElementById('menu');
    menu.classList.toggle('open');
}

// Fonction pour ouvrir ou fermer le menu de connexion
function toggleLoginMenu() {
    const loginMenu = document.getElementById('login-menu');
    loginMenu.classList.toggle('open');
}

// Fonction pour gérer la connexion
function login() {
    const username = document.querySelector('#login-menu input[type="text"]').value;
    const password = document.querySelector('#login-menu input[type="password"]').value;

    // Vérifier si les champs sont remplis
    if (username && password) {
        // Ajouter ici la logique pour la connexion
        alert(`Connexion en tant que ${username}`);
    } else {
        alert('Veuillez remplir tous les champs.');
    }
}

// Fonction pour gérer l'inscription
function register() {
    alert("Fonction d'inscription non implémentée.");
}

// Fonction pour changer l'état d'une remontée
function changeStatus(button) {
    button.classList.toggle("status-open");
    button.classList.toggle("status-closed");
    var statusText = button.nextElementSibling;
    if (button.classList.contains("status-open")) {
        statusText.textContent = "Ouvert";
    } else {
        statusText.textContent = "Fermé";
    }
}











//SCRIPT DE LA PAGE DESCENTE 
document.getElementById('descente-form').addEventListener('submit', function(event) {
    event.preventDefault();
    const depart = document.getElementById('depart').value;
    const destination = document.getElementById('destination').value;

    // Simuler le temps et la distance en fonction du départ et de la destination (pour l'exemple)
    let tempsEstime;
    let distance;
    let difficulty;
    // Logique de calcul du temps, de la distance et de la difficulté en fonction du départ et de la destination

    switch (depart) {
        case 'ramiers':
            switch (destination) {
                case 'bambinos':
                    tempsEstime = '30 minutes';
                    distance = '5 km';
                    difficulty = 'Bleue';
                    break;
                case 'monthery':
                    tempsEstime = '45 minutes';
                    distance = '8 km';
                    difficulty = 'Rouge';
                    break;
                // Ajoutez d'autres destinations pour Les Ramiers ici
            }
            break;
        case 'bambinos':
            switch (destination) {
                case 'ramiers':
                    tempsEstime = '30 minutes';
                    distance = '5 km';
                    difficulty = 'Bleue';
                    break;
                case 'monthery':
                    tempsEstime = '1 heure';
                    distance = '10 km';
                    difficulty = 'Rouge';
                    break;
                // Ajoutez d'autres destinations pour Les Bambinos ici
            }
            break;
        case 'monthery':
            switch (destination) {
                case 'ramiers':
                    tempsEstime = '45 minutes';
                    distance = '8 km';
                    difficulty = 'Rouge';
                    break;
                case 'bambinos':
                    tempsEstime = '1 heure';
                    distance = '10 km';
                    difficulty = 'Rouge';
                    break;
                // Ajoutez d'autres destinations pour La Monthery ici
            }
            break;
        // Ajoutez d'autres départs ici
    }

    // Affichage des résultats
    document.getElementById('selected-depart').textContent = depart;
    document.getElementById('selected-destination').textContent = destination;
    document.getElementById('estimated-time').textContent = tempsEstime;
    document.getElementById('estimated-distance').textContent = distance;
    document.getElementById('difficulty').textContent = difficulty;

    // Affichage de la zone de résultats
    document.querySelector('.results').style.display = 'block';
});

// Fonction pour ouvrir ou fermer le menu
function toggleMenu() {
    const menu = document.getElementById('menu');
    menu.classList.toggle('open');
}

// Fonction pour ouvrir ou fermer le menu de connexion
function toggleLoginMenu() {
    const loginMenu = document.getElementById('login-menu');
    loginMenu.classList.toggle('open');
}

// Fonction pour gérer la connexion
function login() {
    const username = document.querySelector('#login-menu input[type="text"]').value;
    const password = document.querySelector('#login-menu input[type="password"]').value;

    // Vérifier si les champs sont remplis
    if (username && password) {
        // Ajouter ici la logique pour la connexion
        alert(`Connexion en tant que ${username}`);
    } else {
        alert('Veuillez remplir tous les champs.');
    }
}

// Fonction pour gérer l'inscription
function register() {
    alert("Fonction d'inscription non implémentée.");
}



// SCRIPT DE LA PAGE ACCUEIL
// Obtenir la référence de la vidéo
const video = document.getElementById('bg-video');

// Fonction pour mettre en pause ou reprendre la vidéo
function togglePause() {
    if (video.paused) {
        video.play();
    } else {
        video.pause();
    }
}

// Fonction pour ouvrir ou fermer le menu
function toggleMenu() {
    const menu = document.getElementById('menu');
    menu.classList.toggle('open');
}

// Fonction pour ouvrir ou fermer le menu de connexion
function toggleLoginMenu() {
    const loginMenu = document.getElementById('login-menu');
    loginMenu.classList.toggle('open');
}

// Fonction pour gérer la connexion
function login() {
    const username = document.querySelector('#login-menu input[type="text"]').value;
    const password = document.querySelector('#login-menu input[type="password"]').value;

    // Vérifier si les champs sont remplis
    if (username && password) {
        // Ajouter ici la logique pour la connexion
        alert(`Connexion en tant que ${username}`);
    } else {
        alert('Veuillez remplir tous les champs.');
    }
}

// Fonction pour gérer l'inscription
function register() {
    alert("Fonction d'inscription non implémentée.");
}




// SCRIPT DE LA PAGE METEO
// Obtenir la référence de la vidéo
const video = document.getElementById('bg-video');

// Fonction pour mettre en pause ou reprendre la vidéo
function togglePause() {
    if (video.paused) {
        video.play();
    } else {
        video.pause();
    }
}

// Fonction pour ouvrir ou fermer le menu
function toggleMenu() {
    const menu = document.getElementById('menu');
    menu.classList.toggle('open');
}

// Fonction pour ouvrir ou fermer le menu de connexion
function toggleLoginMenu() {
    const loginMenu = document.getElementById('login-menu');
    loginMenu.classList.toggle('open');
}

// Fonction pour gérer la connexion
function login() {
    const username = document.querySelector('#login-menu input[type="text"]').value;
    const password = document.querySelector('#login-menu input[type="password"]').value;

    // Vérifier si les champs sont remplis
    if (username && password) {
        // Ajouter ici la logique pour la connexion
        alert(`Connexion en tant que ${username}`);
    } else {
        alert('Veuillez remplir tous les champs.');
    }
}

// Fonction pour gérer l'inscription
function register() {
    alert("Fonction d'inscription non implémentée.");
}

// Fonction pour afficher la température actuelle
function displayCurrentTemperature() {
    // Récupérer l'élément de température
    const temperatureElement = document.getElementById('temperature');

    // Récupérer la température actuelle depuis le widget météo (si disponible)
    const currentTemperature = document.getElementById('wwt_Mjk5MzUxM3w1fDN8MXwzfCM0NTQ1NDV8MXwjZmZmZmZmfGd8_temperature');

    // Afficher la température si elle est disponible
    if (currentTemperature) {
        temperatureElement.textContent = `Température actuelle : ${currentTemperature.textContent}`;
    } else {
        temperatureElement.textContent = `Impossible de récupérer la température actuelle.`;
    }
}

// Appeler la fonction pour afficher la température actuelle
displayCurrentTemperature();
